<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbNote.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAPBSURBVHhe7Z3PatRQFMY7my5ctfoCFdwKunDhTvEPUmspCO67UXEj+gy6cePSdxARRKgv0I3S
        unCroKBuKgqKVAXb8TuSQAyT3JubO5kPzxc42OkkNye/X7+bZITM3JwWERABERABERCBmRIYj8cnUfdR
        r1BfUL9Q71EbqBuohZk26GXnAH2kgI5/WpfPePcWauSFzeDHCbhnUAa6y/IIKx8YvNn/fYeAegH1o4uJ
        yrqPlZSMfyGAeQj1LVFGudnNjC1pqJ4JMSl24l8UyYwEAHQFZVdTqcv1jO1oKCPQU8pTUUwgAOjnUNuo
        TdSx+hA9pq+3Ce343gSwV2vT0tYkIolJ2fVNt+PRT5Bh54rXTcMkJGWnY0t+V2+QsYffX2mj0jEp234J
        dzhyQF1G/axdOu3j9bWYYTok5V7MeK7X6SujhBeZlBOuYYcOPpeMipS2j1eehPpx/X5uGYGkfML+llwD
        D5yIe50zQmBr05edm06HtnH7/rSS0XDz+BX7u+QWdujAh5JRmb4Ohnpy+37LfcZ6Hyh2n4J6g9pCHe8z
        lpttpyhjHWPbzWO5bLqBmnqgA8owKS9T+3Sx3cAy7P9JzrsAm3KQ0zqBY9z6NGXJMBlrKX262EYyiDRL
        hmQQESBqRcmQDCICRK0oGZJBRICoFSVDMogIELWiZEgGEQGiVpQMySAiQNSKkiEZRASIWlEyJIOIAFEr
        SoZkEBEgakXJkAwiAkStKBmSQUSAqBUlQzKICBC1omRIBhEBolaUDMkgIkDUipIhGUQEiFpRMiSDiABR
        K0qGZBARIGpFyZAMIgJErSgZkkFEgKgVJUMyiAgQtaJkSAYRAaJWlAzJICJA1IqSIRlEBIhaUTIkg4gA
        UStIxsXiCWn2pLRysQc99n16Z9OT2FaJDp+rFUAfod5VTeBnyZiVJsA/WpNhX9mgZMxQyO2akN94fTa1
        H5NZJKw6rD0wUtNUDFSAelYTYi93U6S0yFiL6cX9OgA4j/o+QUhnKZKR4c8JEE81yCh/HZUUycggw4YA
        yLsBIcGkSEYmGYWQFxFCGqVIRl4ZCwBqV1Sxyz/Tl2RklFGk43Ksicp6f6VIRmYZhZAHCUJsE0uV3TxW
        F91n9HUEmvYNMTkWycggYymHCYyhr2zoK6OYrq5mEGIfSC7n6Mf9GAD5MEGI3dFvoOyzL/tAcuQeZC4A
        gLkTIcRO3s9Rd1B2Rz+fa/8ap0YAcD80CLETvV192SXxosANRACwV1Afi6TY9GXnlMMD7V67EQEREAER
        EAERSCTwBxDyI/XZvqanAAAAAElFTkSuQmCC
</value>
  </data>
</root>