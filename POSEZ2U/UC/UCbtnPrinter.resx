<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbPrinter.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAOLSURBVHhe7ZxLbhNBEIa9ASRyAvaWLZGwsS/gB3ADr23Li6y8i3IF2BDZSgQn4BQ8DsASE8EJ
        2JPAAslo6IpsNEwynpqpqvF0zx+pF5G7q6u/r7t6rNhpNPADAiAAAiAAAiAAAiAAAiAAAiAAAiCgQGDx
        6XcUUlNAUm6IkODTWsqlpzAbBChAlISAAAk9hbEQoABREgICJPQUxkKAAkRJCAiQ0FMYCwEKECUhIEBC
        T2EsBChAlISAAAk9hbEQoABREgICJPQKjB0MBlG8hSYgub4CiGyHQIAt38zoEJCJyLYDBNjyzYwOAZmI
        bDtAgC3ff9Enk8mT6XS6dO2Laz9di2reiAGxWMxmsyMzDfP5/IGb5LVrf2oOfNeGW7sNejEaje6ritjA
        /wjw7NP+QVWCs/oG8NnwtyfkXOUUbGo+yk7+u249Ho8PxRI2F27dL9qi6z/TEHCJ8nO7/Dx9eRw9/HYS
        Hbj27MVxmqCVhoBrCLgtgMA3vp/etIOvJ2kCrjQEFD1+QY9jCpB/pBG7/+6nHyo7JIF2//P0EgQB+95A
        KEH5Hx9VSycEQEDud5CqOxAlaM87EAIgQHYN7HsH+T6/jL4b7TuAfecPAXsugRDgu4DkH9vx+/+fAMzi
        IT4BWRPg9d1CICDxmdWyNwwEQEC+mln2DrWeDycAJwAnQHQKrI9o6PFF8GkwF1C/3486nU7UarWiZrMZ
        ZGu32zdrpLVyuZQmgBILFXxyXbTWyglI7vzB219RSC0ugU5C5QRQUvEkQ4JPa6m8gGQJCllAJUvQ9hLe
        noQQBVT6Eq7bV5QqdwdAwN1vODUeQ6+4tuv0TXkmkx8aAi6Zk9XqXxUwmcg/nu4mWjAnKyTg0ennqAot
        639bFGHgHkxeiU9Ar9c7cpOv8yaQtaDt61WATzlk5Zt3/cRsOBw+FgugAM7kRd4EshYUugAHf6kCn4LQ
        Vy6dgPd5JNRZgNuw77rd7j01ATEJ59xyxBXgSz/m5qOys1SHHzfp7B66ZM5cW7l2nZaYL2C5ee4QQAxW
        dOGq1XyNo8NdmC/9NJiUGsMXsNw8S4WnMRl3YWU9hnLzSeunwaTUGNwFQ4CRFggwAssNCwFcUkb9uAJ8
        6WeEyS6sL2C5edqRMorMXZgv/Yww2YX1BSw3TztSRpG5C/OlnxEmu7C+gOXmaUcKkUEABEAABEAABEAA
        BEAABEAABECgTgT+Av45Jg3UEUjkAAAAAElFTkSuQmCC
</value>
  </data>
</root>